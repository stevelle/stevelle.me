<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>stevelle.me (Posts about openstack)</title><link>https://stevelle.me/</link><description></description><atom:link href="https://stevelle.me/categories/openstack.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Mon, 24 Apr 2017 02:36:40 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Reproducing OpenStack Grenade gate job results</title><link>https://stevelle.me/posts/reproducing-grenade-results/</link><dc:creator>@stevelle</dc:creator><description>&lt;div&gt;&lt;p&gt;This is just a really quick post to capture something learned.&lt;/p&gt;
&lt;p&gt;Imagine your CI job fails. Imagine you can't tell why easily because
there are so many moving parts in the CI. Imagine you are asked to
fix the broken build.&lt;/p&gt;
&lt;img alt="/images/tbss.gif" src="https://stevelle.me/images/tbss.gif"&gt;
&lt;p&gt;This post is about how I got past that.&lt;/p&gt;
&lt;p&gt;Step 1: Set the stage&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Provision a new VM which could run a gate job.&lt;/li&gt;
&lt;li&gt;Prepare it with any personal customizations and tailor to your tool preferences appropriate to a disposable working environment.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Step 2: Prepare the host to emulate the gate&lt;/p&gt;
&lt;p&gt;In the VM&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_2355a1794b224383a961726e812bd8d8-1"&gt;&lt;/a&gt;cd /opt # or somewhere you want to put stuff
&lt;a name="rest_code_2355a1794b224383a961726e812bd8d8-2"&gt;&lt;/a&gt;git clone https://github.com/JohnVillalovos/devstack-gate-test.git
&lt;a name="rest_code_2355a1794b224383a961726e812bd8d8-3"&gt;&lt;/a&gt;cd devstack-gate-test
&lt;a name="rest_code_2355a1794b224383a961726e812bd8d8-4"&gt;&lt;/a&gt;./vm-setup.sh
&lt;a name="rest_code_2355a1794b224383a961726e812bd8d8-5"&gt;&lt;/a&gt;su - jenkins
&lt;/pre&gt;&lt;p&gt;Step 2.5: [optional]&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Snapshot the instance here for convenience&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Step 3: Execute the reproduction event&lt;/p&gt;
&lt;p&gt;In a browser&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;click the link of the correct gate job from the review you want to reproduce&lt;/li&gt;
&lt;li&gt;find the &lt;tt class="docutils literal"&gt;reproduce.sh&lt;/tt&gt; script in the &lt;tt class="docutils literal"&gt;logs&lt;/tt&gt; directory&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;copy link location&lt;/tt&gt; for this script&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the VM&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_3007c092dd974f85ac9d775bc3751a61-1"&gt;&lt;/a&gt;cd ..
&lt;a name="rest_code_3007c092dd974f85ac9d775bc3751a61-2"&gt;&lt;/a&gt;wget [paste-url]
&lt;a name="rest_code_3007c092dd974f85ac9d775bc3751a61-3"&gt;&lt;/a&gt;chmod u+x reproduce.sh
&lt;a name="rest_code_3007c092dd974f85ac9d775bc3751a61-4"&gt;&lt;/a&gt;./reproduce.sh
&lt;/pre&gt;&lt;p&gt;Now just kick back and watch the cargage!&lt;/p&gt;
&lt;img alt="/images/trainwreck.gif" src="https://stevelle.me/images/trainwreck.gif"&gt;&lt;/div&gt;</description><category>grenade</category><category>openstack</category><category>zuul</category><guid>https://stevelle.me/posts/reproducing-grenade-results/</guid><pubDate>Wed, 15 Mar 2017 23:21:22 GMT</pubDate></item></channel></rss>